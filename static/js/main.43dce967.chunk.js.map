{"version":3,"sources":["functionBased/components/TodoItem.module.css","functionBased/components/Navbar.js","functionBased/components/Header.js","functionBased/components/TodoInput.js","functionBased/components/TodoItem.js","functionBased/components/TodoList.js","functionBased/pages/SinglePage.js","functionBased/pages/About.js","functionBased/pages/NotMatch.js","functionBased/components/TodoContainer.js","index.js"],"names":["module","exports","NavBar","useState","navbarOpen","setNavbarOpen","className","onClick","prev","style","color","width","height","id","path","text","map","link","to","activeClassName","exact","Header","padding","lineHeight","fontSize","fontWeight","marginBottom","textTransform","textAlign","TodoInput","props","title","inputText","setInputText","onSubmit","e","preventDefault","trim","addTodoProps","alert","type","placeholder","value","name","onChange","target","TodoItem","editing","setEditing","todo","completed","viewMode","editMode","display","useEffect","console","log","styles","item","onDoubleClick","checkbox","checked","handleChangeProps","deleteTodoProps","fontStyle","opacity","textDecoration","textInput","setUpdate","onKeyDown","event","key","TodoList","todos","SinglePage","slug","useParams","aboutContent","description","find","About","useRouteMatch","url","NotMatch","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","stringify","setItem","newTodo","uuidv4","prevState","filter","updatedTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43dce967.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__3-7Hx\",\"checkbox\":\"TodoItem_checkbox__X2OI3\",\"textInput\":\"TodoItem_textInput__2Ntkz\"};","import React, { useState } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { MdClose } from \"react-icons/md\"\r\nimport { FiMenu } from \"react-icons/fi\"\r\n\r\nconst NavBar = () => {\r\n  const links = [\r\n    {\r\n      id: 1,\r\n      path: \"/\",\r\n      text: \"Home\",\r\n    },\r\n    {\r\n      id: 2,\r\n      path: \"/About\",\r\n      text: \"About\",\r\n    },\r\n  ]\r\n\r\n  const [navbarOpen, setNavbarOpen] = useState(false)\r\n\r\n  const handleToggle = () => {\r\n    setNavbarOpen(prev => !prev)\r\n  }\r\n\r\n  const closeMenu = () => {\r\n    setNavbarOpen(false)\r\n  }\r\n\r\n  return (\r\n    <nav className=\"navBar\">\r\n      <button onClick={handleToggle}>\r\n        {navbarOpen ? (\r\n          <MdClose style={{ color: \"#fff\", width: \"40px\", height: \"40px\"}} />\r\n        ) : (\r\n          <FiMenu style={{ color: \"##7b7b7b\", width: \"40px\", height: \"40px\"}} />\r\n        )}\r\n      </button>\r\n      <ul className={`menuNav ${navbarOpen ? \" showMenu\" : \"\"}`}>\r\n        {links.map(link => {\r\n          return (\r\n            <li key={link.id}>\r\n              <NavLink\r\n                to={link.path}\r\n                activeClassName=\"active-link\"\r\n                onClick={() => closeMenu()}\r\n                exact\r\n              >\r\n                {link.text}\r\n              </NavLink>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  const headerStyle = {\r\n    padding: \"20px 0\",\r\n    lineHeight: \"1.5em\",\r\n  }\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1\r\n        style={{\r\n          fontSize: \"6rem\",\r\n          fontWeight: \"600\",\r\n          marginBottom: \"2rem\",\r\n          lineHeight: \"1em\",\r\n          color: \"#ecece\",\r\n          textTransform: \"lowercase\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        todos\r\n      </h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React, { useState } from \"react\"\r\n// useState is a Hook to add a local state into function component\r\nimport { FaPlusCircle } from \"react-icons/fa\"\r\n// import { IconContext } from \"react-icons\"\r\n\r\n// Hooks can only be called at top level of the function component\r\n// or from custom hooks (not in loop, condition, reg function)\r\n// to ensure that each state is rendered in the same order\r\n// this project is handling preserving state because of create-react-app\r\n// else would need to use ESLint plugin\r\n// -> this keyword does not exist in function based component (same as methods in class components)\r\nconst TodoInput = props => {\r\n  // destructuring state arra (contains value passed into useState \"\"\r\n  // and a function to update that current value)\r\n  const [inputText, setInputText] = useState({\r\n    title: \"\",\r\n  })\r\n\r\n  const onChange = e => {\r\n    // instead of setState() in classBased component\r\n    setInputText({\r\n      ...inputText,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (inputText.title.trim()) {\r\n      props.addTodoProps(inputText.title)\r\n      setInputText({\r\n        title: \"\",\r\n      })\r\n    } else {\r\n      alert(\"Please write item\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form-container\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"input-text\"\r\n        placeholder=\"Add todo...\"\r\n        value={inputText.title}\r\n        name=\"title\"\r\n        onChange={onChange}\r\n      />\r\n      <button className=\"input-submit\">\r\n        <FaPlusCircle />\r\n      </button>\r\n\r\n      {/*\r\n        another way to style icons that are side by side without targeting them in CSS file (easier) \r\n        this allows for configuring prop (everything within .Provider)\r\n      <IconContext.Provider\r\n      value={{\r\n        color: \"darkcyan\",\r\n        style: { fontSize: \"20px\", color: \"#ff0000\"},\r\n        className: \"submit-icon\"\r\n      }}\r\n      >\r\n        <button className=\"input-submit\">\r\n          <FaPlusCircle />\r\n          <FaPlusCircle />\r\n          <FaPlusCircle />\r\n        </button>\r\n      </IconContext.Provider> */}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TodoInput","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./TodoItem.module.css\";\r\nimport { FaTrash } from \"react-icons/fa\"\r\n\r\nconst TodoItem = props => {\r\n  const [editing, setEditing] = useState(false)\r\n\r\n  const handleEditing = () => {\r\n    setEditing(true)\r\n  }\r\n\r\n  const handleUpdatedDone = event => {\r\n    if (event.key === \"Enter\") {\r\n      setEditing(false)\r\n    }\r\n  }\r\n  \r\n  const completedStyle = {\r\n    fontStyle: \"italic\",\r\n    color: \"#595959\",\r\n    opacity: 0.4,\r\n    textDecoration: \"line-through\",\r\n  }\r\n  \r\n  const { completed, id, title } = props.todo\r\n  \r\n  let viewMode = {}\r\n  let editMode = {}\r\n  \r\n  if (editing) {\r\n    viewMode.display = \"none\"\r\n  } else {\r\n    editMode.display = \"none\"\r\n  }\r\n\r\n  // componentWillUnmount is unnecessary becuase useEffect also perform cleanup affect\r\n  // along with its render by default\r\n  useEffect(() => {\r\n    // when returning a function inside useEffect w/o dependencies\r\n    // the effect will just run once & function will be called when component is about to unmount\r\n    // however, if we don't specify array, the effect goes back to default (executes on every re-render & performs cleanup)\r\n    // -> in this app, every interaction with an item will log the message below\r\n    // to remove this action, need to add dependency array so there is any empty array because there are no component values needed\r\n    return () => {\r\n      console.log(\"Cleaning up...\")\r\n    }\r\n  }, [])\r\n  \r\n  return (\r\n    // css modules generate unique class names so prevents selector conflicts\r\n    <li className={styles.item}>\r\n      <div onDoubleClick={handleEditing} style={viewMode}>\r\n        <input\r\n          type=\"checkbox\"\r\n          className={styles.checkbox}\r\n          checked={completed}\r\n          onChange={() => props.handleChangeProps(id)}\r\n        />\r\n        <button onClick={() => props.deleteTodoProps(id)}>\r\n          <FaTrash style={{ color: \"orangered\", fontSize: \"16px\" }} />\r\n        </button>\r\n        <span style={completed ? completedStyle : null}>{title}</span>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        style={editMode}\r\n        className={styles.textInput}\r\n        value={title}\r\n        onChange={e => {\r\n          props.setUpdate(e.target.value, id)\r\n        }}\r\n        onKeyDown={handleUpdatedDone}\r\n      />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default TodoItem","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoList = props => {\r\n  return (\r\n    <ul>\r\n      {props.todos.map(todo => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          handleChangeProps={props.handleChangeProps}\r\n          deleteTodoProps={props.deleteTodoProps}\r\n          setUpdate={props.setUpdate}\r\n        />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default TodoList","import React from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nconst SinglePage = () => {\r\n  const aboutData = [\r\n    {\r\n      slug: \"about-app\",\r\n      title: \"About the App\",\r\n      description:\r\n        \"In this app, you can add, delete, submit and edit items. To edit items, simply double click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.\",\r\n    },\r\n    {\r\n      slug: \"about-author\",\r\n      title: \"About the Author\",\r\n      description:\r\n        \"This app was developed by Ibas Majid, a self-taught web developer and a technical writer. He is opened to freelance Gig. So go ahead and connect with ibas on Twitter @ibaslogic.\",\r\n    },\r\n  ]\r\n\r\n  const { slug } = useParams()\r\n  const aboutContent = aboutData.find(item => item.slug === slug)\r\n  const { title, description} = aboutContent\r\n\r\n  return (\r\n    <div className=\"main__content\">\r\n      <h1>{title}</h1>\r\n      <p>{description}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SinglePage","import React from \"react\"\r\nimport { Link, useRouteMatch, Route } from \"react-router-dom\"\r\nimport SinglePage from \"./SinglePage\"\r\n\r\nconst About = () => {\r\n  const { url, path } = useRouteMatch()\r\n  \r\n  return (\r\n    <div className=\"about__content\">\r\n      <ul className=\"about__list\">\r\n        <li>\r\n          <Link to={`${url}/about-app`}>About App</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${url}/about-author`}>About Author</Link>\r\n        </li>\r\n      </ul>\r\n      <Route path={`${path}/:slug`}>\r\n        <SinglePage />\r\n      </Route>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","import React from \"react\"\r\n\r\nconst NotMatch = () => {\r\n  return (\r\n    <div>\r\n      <h3>No match for this page</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotMatch","import React, { useState, useEffect } from \"react\"\r\nimport NavBar from \"./Navbar\"\r\nimport Header from \"./Header\"\r\nimport TodoInput from \"./TodoInput\"\r\nimport TodoList from \"./TodoList\"\r\nimport {v4 as uuidv4 } from \"uuid\"\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport About from \"../pages/About\"\r\nimport NotMatch from \"../pages/NotMatch\"\r\n\r\n// no props becuase it is the parent component\r\nconst TodoContainer = () => {\r\n  // removes redundant useEffect call with empty array\r\n  const [todos, setTodos] = useState(getInitialTodos())\r\n\r\n  // acces to prevState from function passed to setTodos\r\n  const handleChange = id => {\r\n    setTodos(prevState =>\r\n      prevState.map(todo => {\r\n        if (todo.id === id) {\r\n          return {\r\n            ...todo,\r\n            completed: !todo.completed,\r\n          }\r\n        }\r\n        return todo\r\n      })\r\n    )\r\n  }\r\n\r\n  const delTodo = id => {\r\n    setTodos([\r\n      ...todos.filter(todo => {\r\n        return todo.id !== id\r\n      }),\r\n    ])\r\n  }\r\n\r\n  const addTodoItem = title => {\r\n    const newTodo = {\r\n      id: uuidv4(),\r\n      title: title,\r\n      completed: false\r\n    }\r\n    setTodos([...todos, newTodo])\r\n  }\r\n\r\n  const setUpdate = (updatedTitle, id) => {\r\n    setTodos(\r\n      todos.map(todo => {\r\n        if (todo.id === id) {\r\n          todo.title = updatedTitle\r\n        }\r\n        return todo\r\n      })\r\n    )\r\n  }\r\n\r\n  // hook method serves as lifecycle methods from class based components\r\n  // like componentDidUpdate()/DidMount()/etc.\r\n  // function will define which side effect to run\r\n  // optional array as parameter defines when to re-run effect\r\n  // -> array needed when effect uses any component values (props,states,functions)\r\n  // default, this method will run after every completed render (first render or any time state/prop changes)\r\n  // useEffect(() => {\r\n  //   console.log(\"test run\")\r\n  //   // getting stored items in local storage on broswer\r\n  //   const temp = localStorage.getItem(\"todos\")\r\n  //   const loadedTodos = JSON.parse(temp)\r\n  //   if (loadedTodos) {\r\n  //     // although we are using setTodos function\r\n  //     // it is not necessary to add to parameter array\r\n  //     // because it never changes so it is safe to omit (stable & doesn't change on re-renders)\r\n  //     // ESLint may give warning => just add setTodos to array then\r\n  //     setTodos(loadedTodos)\r\n  //   }\r\n  // }, [])\r\n\r\n  // another method from above\r\n  function getInitialTodos() {\r\n    // getting stored items in local storage on browser\r\n    const temp = localStorage.getItem(\"todos\")\r\n    const savedTodos = JSON.parse(temp)\r\n    return savedTodos || []\r\n  }\r\n\r\n  // this useEffect will only run when todos is change\r\n  // React will check on the dependencies to re-run effect\r\n  useEffect(() => {\r\n    // storing todo items\r\n    const temp = JSON.stringify(todos)\r\n    localStorage.setItem(\"todos\", temp)\r\n  }, [todos])\r\n\r\n  return (\r\n    <>\r\n    <NavBar />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <div className=\"container\">\r\n            <div className=\"inner\">\r\n              <Header />\r\n              <TodoInput addTodoProps={addTodoItem} />\r\n              <TodoList\r\n                todos={todos}\r\n                handleChangeProps={handleChange}\r\n                deleteTodoProps={delTodo}\r\n                setUpdate={setUpdate}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Route>\r\n        <Route path=\"/about\">\r\n          <About />\r\n        </Route>\r\n        <Route path=\"*\">\r\n          <NotMatch />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TodoContainer\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { HashRouter as Router } from \"react-router-dom\"\r\n\r\n// using component instead of direct HTML\r\n//const element = <h1>Hello from Create React App</h1>\r\nimport TodoContainer from \"./functionBased/components/TodoContainer\"\r\n\r\n// stylesheet\r\nimport \"./functionBased/App.css\"\r\n\r\n// instead of rendering simple HTML like before\r\n// now it renders a React component\r\n//StrictMode used for debugging in devtools at runtime\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <TodoContainer />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)"],"sourceRoot":""}